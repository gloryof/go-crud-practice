/**
 * Plugins.
 * @required Go Plugin
 * @required Config File Provider
 * @required Cobertura
 */
pipeline {
    agent any

    environment {
        PROJECT_NAME="go-crud-practice"
        TARGET_GO = tool name: 'Go.1.10.3', type: 'go'
        GOPATH = "${JENKINS_HOME}/workspace/${env.JOB_NAME}/GOPATH"
        GOBIN = "${GOPATH}/bin"
        CHECKOUT_DIR = "GOPATH/src/github.com/gloryof/${PROJECT_NAME}"
        PATH= "$PATH:${GOBIN}:${TARGET_GO}/bin"
        GO111MODULE = "on"
    }

    stages {
        stage("Prepare") {
            steps {
                sh 'go get -u github.com/t-yuki/gocover-cobertura'
            }
        }

        stage("Checkout") {
            steps {
                checkout([
                    $class: 'GitSCM',
                    branches: [
                        [name: '*/master']
                    ],
                    doGenerateSubmoduleConfigurations: false,
                    extensions: [
                        [$class: 'RelativeTargetDirectory', relativeTargetDir: "${CHECKOUT_DIR}"]
                    ],
                    submoduleCfg: [],
                    userRemoteConfigs: [
                        [url: 'https://github.com/gloryof/go-crud-practice']
                    ]
                ])
            }
        }


        stage('Build') {
            steps {
                dir("${CHECKOUT_DIR}") {
                    sh "make"
                    sh "gocover-cobertura < bin/cover.out > bin/cover.xml"

                    cobertura (
                        autoUpdateHealth: false,
                        autoUpdateStability: false,
                        coberturaReportFile: 'bin/cover.xml',
                        conditionalCoverageTargets: '70, 0, 0',
                        failUnhealthy: false,
                        failUnstable: false,
                        lineCoverageTargets: '80, 0, 0',
                        maxNumberOfBuilds: 0,
                        methodCoverageTargets: '80, 0, 0',
                        onlyStable: false,
                        zoomCoverageChart: false
                    )
                }
            }
        }

        stage('Deploy') {
            steps {
                dir("${CHECKOUT_DIR}") {
                    withCredentials([usernameColonPassword(credentialsId: 'nexus-dev', variable: 'CREDENTIAL')]) {
                        sh "curl -v -f " \
                            + "-POST 'http://192.168.1.100:8081/service/rest/v1/components?repository=golang' " \
                            + "-u ${CREDENTIAL} " \
                            + "-H 'accept: application/json' " \
                            + "-H 'Content-Type: multipart/form-data' " \
                            + "-F 'raw.directory=/go-crud-practice/snapshot/master' " \
                            + "-F 'raw.asset1=@bin/crud' " \
                            + "-F 'raw.asset1.filename=crud' " \
                            + "-F 'raw.asset2=@bin/crud-assets.tar.gz' " \
                            + "-F 'raw.asset2.filename=crud-assets.tar.gz' " 
                    }
                }
            }
        }
    }
}